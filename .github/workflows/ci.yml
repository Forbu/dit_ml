name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # Use a suitable Python version

    - name: Install uv
      run: |
        pip install uv

    - name: Install dependencies
      run: |
        uv sync --extra dev

    - name: Install project in editable mode
      run: |
        uv pip install -e .

    - name: Run Pylint and save score
      run: |
        uv run pylint dit_ml tests > pylint_output.txt || true # Allow failure so workflow continues

    - name: Extract Pylint Score
      id: extract_pylint_score
      run: |
        SCORE=$(grep -oP 'Your code has been rated at \K[\d.]+(?=/10)' pylint_output.txt || echo "N/A")
        echo "SCORE=$SCORE" >> $GITHUB_OUTPUT

    - name: Run tests with pytest
      id: run_tests # Add this ID to reference the step outcome
      run: |
        uv run pytest --junitxml=report.xml --cov=dit_ml tests/

    - name: Generate Pylint Badge
      uses: action-badges/core@0.3.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        file-name: pylint_badge.svg
        label: Pylint
        message: ${{ steps.extract_pylint_score.outputs.SCORE }}/10
        message-color: green

    - name: Generate Tests Badge
      uses: action-badges/core@0.3.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        file-name: tests_badge.svg
        label: Tests
        message: ${{ steps.run_tests.outcome }}
        message-color: ${{ steps.run_tests.outcome == 'success' && 'green' || 'red' }}
